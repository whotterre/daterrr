// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateNewUser(ctx context.Context, arg CreateNewUserParams) (CreateNewUserRow, error)
	//---------------------------------------
	// 3. PASSWORD RESET
	//---------------------------------------
	// Generate password reset token
	CreatePasswordResetToken(ctx context.Context, arg CreatePasswordResetTokenParams) (PasswordResetToken, error)
	// After successful login: Create session
	CreateSession(ctx context.Context, arg CreateSessionParams) (UserSession, error)
	// Logout: Delete session
	DeleteSession(ctx context.Context, token string) error
	// Delete user and profile with confirmation
	DeleteUserWithProfile(ctx context.Context, id pgtype.UUID) (DeleteUserWithProfileRow, error)
	//---------------------------------------
	// 2. SESSION MANAGEMENT
	//---------------------------------------
	// Middleware: Check if token is valid
	GetSessionByToken(ctx context.Context, token string) (GetSessionByTokenRow, error)
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	GetUserByID(ctx context.Context, id pgtype.UUID) (GetUserByIDRow, error)
	//---------------------------------------
	// 1. LOGIN FUNCTIONALITY
	//---------------------------------------
	// For login page: Get user by email + password hash
	GetUserForLogin(ctx context.Context, email string) (GetUserForLoginRow, error)
	// Get complete user profile by ID
	GetUserProfile(ctx context.Context, id pgtype.UUID) (GetUserProfileRow, error)
	// Validate reset token (24-hour expiry)
	GetValidPasswordResetToken(ctx context.Context, token string) (PasswordResetToken, error)
	// After password update: Mark token as used
	MarkResetTokenUsed(ctx context.Context, token string) error
	UpdateLastActive(ctx context.Context, id pgtype.UUID) error
	UpdateProfile(ctx context.Context, arg UpdateProfileParams) (Profile, error)
	UserExists(ctx context.Context, email string) (bool, error)
}

var _ Querier = (*Queries)(nil)
