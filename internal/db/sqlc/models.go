// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"net/netip"

	"github.com/jackc/pgx/v5/pgtype"
)

type Chat struct {
	ID        pgtype.UUID      `json:"id"`
	User1ID   pgtype.UUID      `json:"user1_id"`
	User2ID   pgtype.UUID      `json:"user2_id"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type Match struct {
	ID        pgtype.UUID      `json:"id"`
	User1ID   pgtype.UUID      `json:"user1_id"`
	User2ID   pgtype.UUID      `json:"user2_id"`
	MatchedAt pgtype.Timestamp `json:"matched_at"`
}

type Message struct {
	ID        pgtype.UUID      `json:"id"`
	ChatID    pgtype.UUID      `json:"chat_id"`
	SenderID  pgtype.UUID      `json:"sender_id"`
	Content   string           `json:"content"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	ReadAt    pgtype.Timestamp `json:"read_at"`
}

type Notification struct {
	ID        pgtype.UUID        `json:"id"`
	UserID    pgtype.UUID        `json:"user_id"`
	Type      string             `json:"type"`
	Data      []byte             `json:"data"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	Read      pgtype.Bool        `json:"read"`
}

type PasswordResetToken struct {
	ID        pgtype.UUID      `json:"id"`
	UserID    pgtype.UUID      `json:"user_id"`
	TokenHash string           `json:"token_hash"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	Used      pgtype.Bool      `json:"used"`
}

type Profile struct {
	ID        pgtype.UUID  `json:"id"`
	UserID    pgtype.UUID  `json:"user_id"`
	FirstName string       `json:"first_name"`
	LastName  string       `json:"last_name"`
	Bio       pgtype.Text  `json:"bio"`
	Gender    string       `json:"gender"`
	Age       int32        `json:"age"`
	ImageUrl  pgtype.Text  `json:"image_url"`
	Location  pgtype.Point `json:"location"`
	Interests []string     `json:"interests"`
}

type Swipe struct {
	ID       pgtype.UUID      `json:"id"`
	SwiperID pgtype.UUID      `json:"swiper_id"`
	SwipeeID pgtype.UUID      `json:"swipee_id"`
	SwipedAt pgtype.Timestamp `json:"swiped_at"`
}

type User struct {
	ID         pgtype.UUID      `json:"id"`
	Email      string           `json:"email"`
	Password   string           `json:"password"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	LastActive pgtype.Timestamp `json:"last_active"`
}

type UserSession struct {
	ID        pgtype.UUID      `json:"id"`
	UserID    pgtype.UUID      `json:"user_id"`
	Token     string           `json:"token"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	IpAddress *netip.Addr      `json:"ip_address"`
	UserAgent pgtype.Text      `json:"user_agent"`
	IsRevoked pgtype.Bool      `json:"is_revoked"`
}
